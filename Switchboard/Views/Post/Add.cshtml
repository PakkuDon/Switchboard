@model Switchboard.Models.Post

@using (Html.BeginForm("Add", "Post", FormMethod.Post, new { id = "post-form" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ChannelID)
    
    <div class="form-horizontal">
        <hr />
        <ul class="validation-summary-errors">
        </ul>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button id="submit-reply" type="submit" class="btn btn-default">Reply</button>
            </div>
        </div>
    </div>
}

<script>
    $(document).ready(function (e) {
        $('#post-form').submit(function (e) {
            e.preventDefault();
            var $validationSummary = $('.validation-summary-errors');
            $validationSummary.empty();
            
            // TODO: Show loading icon on submit
            var $form = $('#post-form');
            $('#submit-reply').append('<div class="ajax-loader"></div>');
            $.post($form.attr('action'), $form.serialize(), function (data, status) {
                $('#submit-reply .ajax-loader').remove();
                if (data.success === true) {
                    window.location.reload();
                }
                // Display errors
                else {
                    for (var i = 0; i < data.errors.length; i++) {
                        $validationSummary.append('<ul>' + data.errors[i] + '</ul>');
                    }
                }
            });
        });
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}